@inherits LayoutComponentBase
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage
@inject NavigationManager NavigationManager
@inject WebTaskMaster.Model.TaskMasterContext DbContext

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

@if (isLoading)
{
    <div class="loading-container">
        <MudProgressCircular Indeterminate="true" Size="Size.Large" Class="loading-spinner" />
        <MudText Typo="Typo.h6" Align="Align.Center" Class="loading-text">Loading...</MudText>
    </div>
}
else
{
    <MudLayout>
        <MudAppBar Elevation="4" Color="Color.Primary">
            <!-- Task Master Logo and Application Title -->
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />

            <!-- Welcome Message -->
            <MudSpacer />
            <MudText Typo="Typo.body1" Color="Color.Inherit" Class="mr-4"> @(user?.Username ?? "User")</MudText>

            <!-- Profile and Settings Icons -->
            <MudIconButton Icon="@Icons.Material.Filled.AccountCircle" Color="Color.Inherit" Href="/profile" />
            <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Inherit" Href="/settings" />

            <!-- Logout Button -->
            <MudButton Variant="Variant.Text" Color="Color.Inherit" OnClick="Logout">
                <MudIcon Icon="@Icons.Material.Filled.ExitToApp" />
            </MudButton>
        </MudAppBar>

        <MudDrawer @bind-Open="@_drawerOpen" Color="Color.Default" Elevation="1">
            <MudDrawerHeader>
                <img src="logo.png" alt="Task Master Logo" style="width: 100%; padding: 8px;" />
            </MudDrawerHeader>

            <!-- Navigation Menu -->
            <NavMenu />
        </MudDrawer>

        <MudMainContent>
            <MudContainer MaxWidth="MaxWidth.Medium" Class="p-4">
                @Body
            </MudContainer>
        </MudMainContent>
    </MudLayout>
}

<style>
    .loading-container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 100vh;
        background-color: #f9f9f9;
    }

    .loading-spinner {
        margin-bottom: 16px;
        color: #594AE2; /* Adjust color to match your theme */
    }

    .loading-text {
        font-weight: 500;
        color: #555; /* Adjust color to match your design */
    }
</style>

@code {
    private bool _drawerOpen = true;
    private WebTaskMaster.Model.User? user;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
           
            // Retrieve the UserID from local storage
            int? userId = await LocalStorage.GetItemAsync<int?>("userId");

            // Fetch user data if the ID exists
            if (userId.HasValue)
            {
                user = await DbContext.Users.FindAsync(userId.Value);
            }
            else
            {
                NavigationManager.NavigateTo("/login");
            }
        }
        finally
        {
            // Data loading complete
            isLoading = false;
        }
    }

    private void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task Logout()
    {
        // Remove user data from local storage
        await LocalStorage.RemoveItemAsync("userId");

        // Redirect to login page
        NavigationManager.NavigateTo("/login", forceLoad: true);
    }
}
