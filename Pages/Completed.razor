@page "/tasks/completed"
@using WebTaskMaster.Model
@using Microsoft.EntityFrameworkCore
@inject NavigationManager NavigationManager
@inject WebTaskMaster.Model.TaskMasterContext DbContext
@inject ISnackbar Snackbar
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<MudContainer MaxWidth="MaxWidth.Large" Class="page-container">
    <!-- Header Section -->
    <MudText Typo="Typo.h4" Align="Align.Center" Class="header-title">Completed Tasks</MudText>
    <MudText Typo="Typo.subtitle1" Align="Align.Center" Class="header-subtitle">
        Review all your completed tasks.
    </MudText>

    <!-- Task List Section -->
    <MudGrid Class="task-grid">
        @if (CompletedTasks == null || !CompletedTasks.Any())
        {
        <MudItem xs="12">
            <MudText Typo="Typo.h6" Align="Align.Center">No completed tasks found.</MudText>
        </MudItem>
        }
        else
        {
        @foreach (var task in CompletedTasks)
        {
        <MudItem>
            <MudCard Class="task-card" Elevation="3">
                <MudCardHeader>
                    <MudAvatar Color="Color.Success" Variant="Variant.Filled" Size="Size.Medium" Class="task-icon">
                        <MudIcon Icon="@Icons.Material.Filled.CheckCircle" />
                    </MudAvatar>
                    <MudText Typo="Typo.h6" Class="task-title">@task.TaskTitle</MudText>
                </MudCardHeader>
                <MudCardContent>
                    <MudText Typo="Typo.body2" Class="task-description">@task.TaskDescription</MudText>
                    <MudDivider Class="date-divider" />
                    <div class="task-dates">
                        <MudIcon Icon="@Icons.Material.Filled.Event" Class="icon-dates" />
                        <span class="date-text">
                                    <strong>Start:</strong> @(task.StartDate == null ? "Not Set" : task.StartDate.Value.ToString("g"))
                                </span>
                        <span class="date-text">
                                    <strong>End:</strong> @(task.EndDate == null ? "Not Set" : task.EndDate.Value.ToString("g"))
                                </span>
                    </div>
                </MudCardContent>
            </MudCard>
        </MudItem>
        }
        }
    </MudGrid>

    <!-- Floating Action Button -->
    <MudFab Color="Color.Primary" StartIcon="@Icons.Material.Filled.ArrowBack" OnClick="NavigateToAllTasks" Class="fab">
        Back to All Tasks
    </MudFab>
</MudContainer>

<style>
    .page-container {
        padding: 24px;
        position: relative;
    }

    .header-title {
        font-weight: bold;
        color: #4a4a4a;
        margin-bottom: 16px;
    }

    .header-subtitle {
        font-size: 1rem;
        color: #888888;
        margin-bottom: 24px;
    }

    .task-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }

    .task-card {
        padding: 16px;
        border-radius: 12px;
        background-color: #f9f9f9;
        box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease, box-shadow 0.3s ease;
    }

    .task-card:hover {
        transform: translateY(-5px);
        box-shadow: 0px 6px 16px rgba(0, 0, 0, 0.2);
    }

    .task-title {
        font-weight: 600;
        color: #2c3e50;
        margin-left: 8px;
    }

    .task-icon {
        margin-right: 8px;
        cursor: pointer;
    }

    .task-description {
        font-size: 0.9rem;
        color: #7f8c8d;
        margin-bottom: 8px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }

    .date-divider {
        margin: 8px 0;
    }

    .task-dates {
        display: flex;
        flex-direction: column;
        font-size: 0.85rem;
        color: #95a5a6;
        padding: 8px;
        background-color: #f9f9f9;
        border-radius: 8px;
        margin-top: 8px;
    }

    .icon-dates {
        color: #e67e22;
        margin-right: 8px;
    }

    .date-text {
        margin-left: 4px;
    }

    .fab {
        position: fixed;
        bottom: 24px;
        right: 24px;
        box-shadow: 0px 4px 12px rgba(0, 0, 0, 0.2);
    }
</style>

@code {
    private List<Activity> CompletedTasks = new();

    protected override async Task OnInitializedAsync()
    {
        int? userId = await LocalStorage.GetItemAsync<int?>("userId");

        if (userId.HasValue)
        {
            CompletedTasks = await DbContext.Activities
                .Where(a => a.UserId == userId.Value && a.Completed)
                .ToListAsync();
        }
        else
        {
            Snackbar.Add("User not logged in. Redirecting to login page.", Severity.Warning);
            NavigationManager.NavigateTo("/login");
        }
    }

    private void NavigateToAllTasks()
    {
        NavigationManager.NavigateTo("/tasks");
    }
}
